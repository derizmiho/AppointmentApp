<!-- views/appointments.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Appointments</title>

    <!-- Add a link to an external stylesheet if needed -->
    <link rel="stylesheet" href="/styles/appointments.css">
</head>
<body>
    <!-- Include the navigation bar -->
    <%- include('partials/nav.ejs') %>

    <h1>View Appointments</h1>

    <!-- Search bar for client's last name -->
    <input type="text" id="searchInput" placeholder="Search by last name" oninput="filterAppointments()">

    <!-- Unordered list to display appointments -->
    <ul id="appointmentsList">
        <!-- Iterate through appointments array using EJS syntax -->
        <% appointments.forEach(appointment => { %>
            <!-- List item for each appointment -->
            <li id="appointment-<%= appointment.id %>">
                <!-- Display appointment details -->
                <strong>Title:</strong> <%= appointment.title %><br>
                <strong>Date:</strong> <%= new Date(appointment.date).toLocaleString() %>
                <button onclick="deleteAppointment('<%= appointment.id %>')">Delete</button>
                <button onclick="editAppointment('<%= appointment.id %>')">Edit</button>
            </li>
        <% }); %>
    </ul>

    <!-- Additional JavaScript for filtering appointments and handling delete/edit -->
    <script>
        function filterAppointments() {
            const searchInput = document.getElementById('searchInput').value.toLowerCase();
            const appointmentsList = document.getElementById('appointmentsList');
            const appointments = appointmentsList.getElementsByTagName('li');

            for (const appointment of appointments) {
                const lastName = appointment.textContent.toLowerCase();

                // Hide or show appointments based on the search input
                if (lastName.includes(searchInput)) {
                    appointment.style.display = '';
                } else {
                    appointment.style.display = 'none';
                }
            }
        }

        function deleteAppointment(appointmentId) {
            // Ask for confirmation before deleting
            const isConfirmed = confirm('Are you sure you want to delete this appointment?');

            if (isConfirmed) {
                fetch(`/cancel-appointment/${appointmentId}`, {
                    method: 'POST',
                })
                .then(response => response.json())
                .then(result => {
                    console.log(result.message);
                    // Remove the deleted appointment from the page
                    const deletedAppointment = document.getElementById(`appointment-${appointmentId}`);
                    deletedAppointment.remove();
                })
                .catch(error => {
                    console.error('Error deleting appointment:', error);
                });
            }
        }

        function editAppointment(appointmentId) {
            // Your logic for handling edit...
        }

        // Function to fetch and display appointments
        function fetchAndDisplayAppointments() {
            // Your existing fetchAndDisplayAppointments function...
        }
    </script>
</body>
</html>







